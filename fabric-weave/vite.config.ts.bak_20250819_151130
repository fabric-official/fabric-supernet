import { defineConfig, loadEnv } from "vite";
import react from "@vitejs/plugin-react-swc";
import path from "path";

function mockAuth() {
  return {
    name: "mock-auth",
    apply: "serve",
        configureServer(server) {
      const okJson = (res: any, body: any, code = 200) => {
        res.statusCode = code;
        res.setHeader("Content-Type", "application/json; charset=utf-8");
        res.end(JSON.stringify(body));
      };
      server.middlewares.use((req, res, next) => {
        const url = req.url || "";
        const method = (req.method || "GET").toUpperCase();

        if (!url.startsWith("/api/auth/")) return next();

        const user = { id: "dev-user", email: "dev@local.test" };
        const me = {
          id: "dev-user",
          user_id: "dev-user",
          email: user.email,
          role: "admin",
          permissions: ["*"],
          full_name: "Dev User"
        };

        // GET /api/auth/me  -> flattened shape UI expects
        if (url === "/api/auth/me" && method === "GET") {
          return okJson(res, me);
        }

        // POST /api/auth/* -> return login shape UI expects
        if ((url === "/api/auth/signin" || url === "/api/auth/signup" ||
             url === "/api/auth/login"  || url === "/api/auth/register") && method === "POST") {
          return okJson(res, { id: user.id, email: user.email, token: "dev-token" }, 200);
        }

        if (url === "/api/auth/signout" && method === "POST") {
          res.statusCode = 204;
          return res.end();
        }

        return okJson(res, { error: "not found" }, 404);
      });
    },
    define: { "process.env.NODE_ENV": JSON.stringify(mode) },
    build: { sourcemap: true }
  };
});
